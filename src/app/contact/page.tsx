"use client";

import React, { useState } from 'react';
import {
  Container,
  Typography,
  Grid,
  Card,
  CardContent,
  Button,
  Box,
  TextField,
  FormControl,
  InputLabel,
  Select,
  MenuItem,
  Alert,
  Snackbar,
  Paper,
  Divider,
  List,
  ListItem,
  ListItemIcon,
  Chip,
} from '@mui/material';
import {
  Phone,
  Email,
  LocationOn,
  AccessTime,
  Send,
  CheckCircle,
  Support,
  Business,
  WhatsApp,
  Facebook,
  Instagram,
  Twitter,
  LinkedIn,
} from '@mui/icons-material';

interface ContactForm {
  name: string;
  email: string;
  phone: string;
  subject: string;
  message: string;
}

const ContactPage: React.FC = () => {
  const [formData, setFormData] = useState<ContactForm>({
    name: '',
    email: '',
    phone: '',
    subject: '',
    message: '',
  });
  const [showSuccess, setShowSuccess] = useState(false);
  const [showError, setShowError] = useState(false);

  const contactInfo = [
    {
      icon: <Phone />,
      title: 'ƒêi·ªán tho·∫°i',
      content: '1900-1234',
      subtitle: 'H·ªó tr·ª£ 24/7',
      color: 'primary.main',
    },
    {
      icon: <Email />,
      title: 'Email',
      content: 'support@flowmart.com',
      subtitle: 'Ph·∫£n h·ªìi trong 2 gi·ªù',
      color: 'success.main',
    },
    {
      icon: <LocationOn />,
      title: 'ƒê·ªãa ch·ªâ',
      content: '123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP.HCM',
      subtitle: 'Tr·ª• s·ªü ch√≠nh',
      color: 'error.main',
    },
    {
      icon: <AccessTime />,
      title: 'Gi·ªù l√†m vi·ªác',
      content: '7:00 - 22:00',
      subtitle: 'Th·ª© 2 - Ch·ªß nh·∫≠t',
      color: 'warning.main',
    },
  ];

  const departments = [
    {
      name: 'H·ªó tr·ª£ kh√°ch h√†ng',
      description: 'Gi·∫£i ƒë√°p th·∫Øc m·∫Øc v·ªÅ s·∫£n ph·∫©m v√† d·ªãch v·ª•',
      email: 'support@flowmart.com',
      phone: '1900-1234',
    },
    {
      name: 'Kinh doanh',
      description: 'H·ª£p t√°c kinh doanh v√† ƒë·ªëi t√°c',
      email: 'business@flowmart.com',
      phone: '1900-1235',
    },
    {
      name: 'Marketing',
      description: 'Qu·∫£ng c√°o v√† truy·ªÅn th√¥ng',
      email: 'marketing@flowmart.com',
      phone: '1900-1236',
    },
    {
      name: 'K·ªπ thu·∫≠t',
      description: 'H·ªó tr·ª£ k·ªπ thu·∫≠t v√† b√°o l·ªói',
      email: 'tech@flowmart.com',
      phone: '1900-1237',
    },
  ];

  const socialMedia = [
    { name: 'Facebook', icon: <Facebook />, url: 'https://facebook.com/flowmart', color: '#1877f2' },
    { name: 'Instagram', icon: <Instagram />, url: 'https://instagram.com/flowmart', color: '#e4405f' },
    { name: 'Twitter', icon: <Twitter />, url: 'https://twitter.com/flowmart', color: '#1da1f2' },
    { name: 'LinkedIn', icon: <LinkedIn />, url: 'https://linkedin.com/company/flowmart', color: '#0077b5' },
    { name: 'WhatsApp', icon: <WhatsApp />, url: 'https://wa.me/84901234567', color: '#25d366' },
  ];

  const handleInputChange = (field: keyof ContactForm, value: string) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    // Validate form
    if (!formData.name || !formData.email || !formData.message) {
      setShowError(true);
      return;
    }

    // Simulate form submission
    console.log('Form submitted:', formData);
    
    // Show success message
    setShowSuccess(true);
    
    // Reset form
    setFormData({
      name: '',
      email: '',
      phone: '',
      subject: '',
      message: '',
    });
  };

  return (
    <Container maxWidth="lg" sx={{ py: 4 }}>
      {/* Header */}
      <Box sx={{ mb: 6, textAlign: 'center' }}>
        <Typography variant="h3" component="h1" gutterBottom sx={{ fontWeight: 'bold', color: 'primary.main' }}>
          üìû Li√™n h·ªá ch√∫ng t√¥i
        </Typography>
        <Typography variant="h6" color="text.secondary" sx={{ mb: 3 }}>
          Ch√∫ng t√¥i lu√¥n s·∫µn s√†ng l·∫Øng nghe v√† h·ªó tr·ª£ b·∫°n m·ªçi l√∫c, m·ªçi n∆°i
        </Typography>
      </Box>

      <Grid container spacing={4}>
        {/* Contact Form */}
        <Grid item xs={12} lg={8}>
          <Card sx={{ p: 4 }}>
            <Typography variant="h5" component="h2" gutterBottom sx={{ fontWeight: 'bold', mb: 3 }}>
              G·ª≠i tin nh·∫Øn cho ch√∫ng t√¥i
            </Typography>
            
            <form onSubmit={handleSubmit}>
              <Grid container spacing={3}>
                <Grid item xs={12} sm={6}>
                  <TextField
                    fullWidth
                    label="H·ªç v√† t√™n *"
                    value={formData.name}
                    onChange={(e) => handleInputChange('name', e.target.value)}
                    required
                  />
                </Grid>
                <Grid item xs={12} sm={6}>
                  <TextField
                    fullWidth
                    label="Email *"
                    type="email"
                    value={formData.email}
                    onChange={(e) => handleInputChange('email', e.target.value)}
                    required
                  />
                </Grid>
                <Grid item xs={12} sm={6}>
                  <TextField
                    fullWidth
                    label="S·ªë ƒëi·ªán tho·∫°i"
                    value={formData.phone}
                    onChange={(e) => handleInputChange('phone', e.target.value)}
                  />
                </Grid>
                <Grid item xs={12} sm={6}>
                  <FormControl fullWidth>
                    <InputLabel>Ch·ªß ƒë·ªÅ</InputLabel>
                    <Select
                      value={formData.subject}
                      label="Ch·ªß ƒë·ªÅ"
                      onChange={(e) => handleInputChange('subject', e.target.value)}
                    >
                      <MenuItem value="">Ch·ªçn ch·ªß ƒë·ªÅ</MenuItem>
                      <MenuItem value="support">H·ªó tr·ª£ kh√°ch h√†ng</MenuItem>
                      <MenuItem value="business">H·ª£p t√°c kinh doanh</MenuItem>
                      <MenuItem value="complaint">Khi·∫øu n·∫°i</MenuItem>
                      <MenuItem value="suggestion">ƒê·ªÅ xu·∫•t</MenuItem>
                      <MenuItem value="other">Kh√°c</MenuItem>
                    </Select>
                  </FormControl>
                </Grid>
                <Grid item xs={12}>
                  <TextField
                    fullWidth
                    label="N·ªôi dung tin nh·∫Øn *"
                    multiline
                    rows={6}
                    value={formData.message}
                    onChange={(e) => handleInputChange('message', e.target.value)}
                    required
                  />
                </Grid>
                <Grid item xs={12}>
                  <Button
                    type="submit"
                    variant="contained"
                    size="large"
                    startIcon={<Send />}
                    sx={{ minWidth: 200 }}
                  >
                    G·ª≠i tin nh·∫Øn
                  </Button>
                </Grid>
              </Grid>
            </form>
          </Card>
        </Grid>

        {/* Contact Info Sidebar */}
        <Grid item xs={12} lg={4}>
          {/* Contact Information */}
          <Card sx={{ mb: 3 }}>
            <CardContent>
              <Typography variant="h6" component="h3" gutterBottom sx={{ fontWeight: 'bold', mb: 3 }}>
                üìç Th√¥ng tin li√™n h·ªá
              </Typography>
              <List>
                {contactInfo.map((info, index) => (
                  <ListItem key={index} sx={{ px: 0 }}>
                    <ListItemIcon>
                      <Box sx={{ 
                        p: 1, 
                        borderRadius: 1, 
                        backgroundColor: info.color,
                        color: 'white',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center'
                      }}>
                        {info.icon}
                      </Box>
                    </ListItemIcon>
                    <Box sx={{ flex: 1 }}>
                      <Typography variant="body1" sx={{ fontWeight: 'bold' }}>
                        {info.content}
                      </Typography>
                      <Typography variant="body2" color="text.secondary">
                        {info.title}
                      </Typography>
                      <Typography variant="caption" color="text.secondary">
                        {info.subtitle}
                      </Typography>
                    </Box>
                  </ListItem>
                ))}
              </List>
            </CardContent>
          </Card>

          {/* Social Media */}
          <Card sx={{ mb: 3 }}>
            <CardContent>
              <Typography variant="h6" component="h3" gutterBottom sx={{ fontWeight: 'bold', mb: 3 }}>
                üåê K·∫øt n·ªëi v·ªõi ch√∫ng t√¥i
              </Typography>
              <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>
                {socialMedia.map((social) => (
                  <Button
                    key={social.name}
                    variant="outlined"
                    startIcon={social.icon}
                    sx={{ 
                      mb: 1,
                      borderColor: social.color,
                      color: social.color,
                      '&:hover': {
                        backgroundColor: social.color,
                        color: 'white',
                        borderColor: social.color,
                      }
                    }}
                  >
                    {social.name}
                  </Button>
                ))}
              </Box>
            </CardContent>
          </Card>

          {/* Quick Support */}
          <Card>
            <CardContent>
              <Typography variant="h6" component="h3" gutterBottom sx={{ fontWeight: 'bold', mb: 3 }}>
                üöÄ H·ªó tr·ª£ nhanh
              </Typography>
              <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>
                <Button
                  variant="contained"
                  startIcon={<Support />}
                  fullWidth
                  sx={{ justifyContent: 'flex-start' }}
                >
                  Chat v·ªõi CSKH
                </Button>
                <Button
                  variant="outlined"
                  startIcon={<Phone />}
                  fullWidth
                  sx={{ justifyContent: 'flex-start' }}
                >
                  G·ªçi ngay: 1900-1234
                </Button>
                <Button
                  variant="outlined"
                  startIcon={<WhatsApp />}
                  fullWidth
                  sx={{ justifyContent: 'flex-start' }}
                >
                  WhatsApp
                </Button>
              </Box>
            </CardContent>
          </Card>
        </Grid>
      </Grid>

      {/* Departments Section */}
      <Box sx={{ mt: 6 }}>
        <Typography variant="h4" component="h2" gutterBottom sx={{ textAlign: 'center', fontWeight: 'bold', mb: 4 }}>
          üè¢ C√°c ph√≤ng ban
        </Typography>
        <Grid container spacing={3}>
          {departments.map((dept, index) => (
            <Grid item xs={12} sm={6} md={3} key={index}>
              <Card sx={{ height: '100%', textAlign: 'center' }}>
                <CardContent sx={{ p: 3 }}>
                  <Box sx={{ mb: 2 }}>
                    {index === 0 && <Support sx={{ fontSize: 48, color: 'primary.main' }} />}
                    {index === 1 && <Business sx={{ fontSize: 48, color: 'success.main' }} />}
                    {index === 2 && <Support sx={{ fontSize: 48, color: 'warning.main' }} />}
                    {index === 3 && <Support sx={{ fontSize: 48, color: 'error.main' }} />}
                  </Box>
                  <Typography variant="h6" component="h3" gutterBottom sx={{ fontWeight: 'bold' }}>
                    {dept.name}
                  </Typography>
                  <Typography variant="body2" color="text.secondary" sx={{ mb: 2 }}>
                    {dept.description}
                  </Typography>
                  <Box sx={{ display: 'flex', flexDirection: 'column', gap: 1 }}>
                    <Typography variant="caption" color="primary">
                      üìß {dept.email}
                    </Typography>
                    <Typography variant="caption" color="primary">
                      üìû {dept.phone}
                    </Typography>
                  </Box>
                </CardContent>
              </Card>
            </Grid>
          ))}
        </Grid>
      </Box>

      {/* FAQ Section */}
      <Box sx={{ mt: 6 }}>
        <Typography variant="h4" component="h2" gutterBottom sx={{ textAlign: 'center', fontWeight: 'bold', mb: 4 }}>
          ‚ùì C√¢u h·ªèi th∆∞·ªùng g·∫∑p
        </Typography>
        <Grid container spacing={3}>
          <Grid item xs={12} md={6}>
            <Card>
              <CardContent>
                <Typography variant="h6" component="h3" gutterBottom sx={{ fontWeight: 'bold' }}>
                  L√†m th·∫ø n√†o ƒë·ªÉ ƒë·∫∑t h√†ng?
                </Typography>
                <Typography variant="body2" color="text.secondary">
                  B·∫°n c√≥ th·ªÉ ƒë·∫∑t h√†ng qua website, ·ª©ng d·ª•ng mobile ho·∫∑c g·ªçi ƒëi·ªán tho·∫°i ƒë·∫øn hotline 1900-1234.
                </Typography>
              </CardContent>
            </Card>
          </Grid>
          <Grid item xs={12} md={6}>
            <Card>
              <CardContent>
                <Typography variant="h6" component="h3" gutterBottom sx={{ fontWeight: 'bold' }}>
                  Th·ªùi gian giao h√†ng l√† bao l√¢u?
                </Typography>
                <Typography variant="body2" color="text.secondary">
                  Ch√∫ng t√¥i giao h√†ng trong v√≤ng 2-4 gi·ªù t·∫°i TP.HCM v√† H√† N·ªôi, c√°c t·ªânh kh√°c t·ª´ 1-3 ng√†y.
                </Typography>
              </CardContent>
            </Card>
          </Grid>
          <Grid item xs={12} md={6}>
            <Card>
              <CardContent>
                <Typography variant="h6" component="h3" gutterBottom sx={{ fontWeight: 'bold' }}>
                  C√≥ th·ªÉ ƒë·ªïi tr·∫£ s·∫£n ph·∫©m kh√¥ng?
                </Typography>
                <Typography variant="body2" color="text.secondary">
                  C√≥, ch√∫ng t√¥i ch·∫•p nh·∫≠n ƒë·ªïi tr·∫£ trong v√≤ng 24h n·∫øu s·∫£n ph·∫©m c√≥ v·∫•n ƒë·ªÅ v·ªÅ ch·∫•t l∆∞·ª£ng.
                </Typography>
              </CardContent>
            </Card>
          </Grid>
          <Grid item xs={12} md={6}>
            <Card>
              <CardContent>
                <Typography variant="h6" component="h3" gutterBottom sx={{ fontWeight: 'bold' }}>
                  C√≥ ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i kh√¥ng?
                </Typography>
                <Typography variant="body2" color="text.secondary">
                  Ch√∫ng t√¥i th∆∞·ªùng xuy√™n c√≥ c√°c ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i v√† m√£ gi·∫£m gi√° cho kh√°ch h√†ng.
                </Typography>
              </CardContent>
            </Card>
          </Grid>
        </Grid>
      </Box>

      {/* Map Section */}
      <Box sx={{ mt: 6 }}>
        <Typography variant="h4" component="h2" gutterBottom sx={{ textAlign: 'center', fontWeight: 'bold', mb: 4 }}>
          üó∫Ô∏è B·∫£n ƒë·ªì
        </Typography>
        <Card>
          <CardContent sx={{ p: 0 }}>
            <Box
              sx={{
                height: 400,
                backgroundColor: 'grey.200',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                borderRadius: 1,
              }}
            >
              <Typography variant="h6" color="text.secondary">
                B·∫£n ƒë·ªì s·∫Ω ƒë∆∞·ª£c hi·ªÉn th·ªã t·∫°i ƒë√¢y
              </Typography>
            </Box>
          </CardContent>
        </Card>
      </Box>

      {/* Success Snackbar */}
      <Snackbar
        open={showSuccess}
        autoHideDuration={6000}
        onClose={() => setShowSuccess(false)}
        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}
      >
        <Alert 
          onClose={() => setShowSuccess(false)} 
          severity="success" 
          sx={{ width: '100%' }}
          icon={<CheckCircle />}
        >
          Tin nh·∫Øn ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng! Ch√∫ng t√¥i s·∫Ω ph·∫£n h·ªìi trong th·ªùi gian s·ªõm nh·∫•t.
        </Alert>
      </Snackbar>

      {/* Error Snackbar */}
      <Snackbar
        open={showError}
        autoHideDuration={6000}
        onClose={() => setShowError(false)}
        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}
      >
        <Alert 
          onClose={() => setShowError(false)} 
          severity="error" 
          sx={{ width: '100%' }}
        >
          Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin b·∫Øt bu·ªôc!
        </Alert>
      </Snackbar>
    </Container>
  );
};

export default ContactPage; 